@using FoodAdvisor.ViewModels.UserViewModels
@using Microsoft.EntityFrameworkCore
@model IEnumerable<IndexAllUsersViewModel>

@{
	ViewData["Title"] = "Admin Panel";
}

@inject RoleManager<IdentityRole<Guid>> roleManager
<link rel="stylesheet" href="~/css/Admin/admin-manage.css" asp-append-version="true" />

@{
	IEnumerable<string?> allRoles = await roleManager.Roles
		.Select(r => r.Name)
		.ToArrayAsync();
}


<h2>Admin Panel</h2>

<div class="search-container">
	<input type="text" placeholder="Search users..." id="searchBox" oninput="filterUsers()" />
</div>

<table class="admin-table">
	<thead>
		<tr>
			<th>User</th>
			<th>Email</th>
			<th>Current Role</th>
			<th>Is Manager</th>
			<th>Add Role</th>
			<th>Remove Role</th>
			<th>Make Manager</th>
			<th>Delete User</th>
		</tr>
	</thead>
	<tbody id="userTable">
		@foreach (var user in Model)
		{
			<tr>
				<td>@user.Username</td>
				<td>@user.Email</td>
				<td>
					@foreach (var role in user.CurrentRoles)
					{
						<span class="badge bg-secondary">@role</span>
					}
				</td>
				<td>@user.IsManager</td>
				<td>
					<form method="post" asp-action="UpdateRole" asp-controller="AdminManage" asp-area="Admin" class="role-form">
						@Html.AntiForgeryToken()
						<select name="roleName" class="role-dropdown">
							@foreach (var role in allRoles)
							{
								<option value="@role">@role</option>
							}
						</select>
						<input type="hidden" name="userId" value="@user.Id" />
						<button type="submit" id="role-update-button">✔</button>
					</form>
				</td>
				<td>
					<form method="post" asp-action="RemoveRole" asp-controller="AdminManage" asp-area="Admin" class="role-form">
						@Html.AntiForgeryToken()
						<select name="roleName" class="role-dropdown">
							@foreach (var role in user.CurrentRoles)
							{
								<option value="@role">@role</option>
							}
						</select>
						<input type="hidden" name="userId" value="@user.Id" />
						<button type="submit" class="delete-button">❌</button>
					</form>
				</td>
				<td>
					@if (user.IsManager == false)
					{
						<div>
							<button class="showFormButton"> ✔Make Manager</button>
							<div class="managerModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5);">
								<div style="background:#fff; width:400px; margin:10% auto; padding:20px; position:relative;">
									<button class="closeModal" style="position:absolute; top:10px; right:10px;">❌</button>
									@await Html.PartialAsync("_ManagerFormPartial", new ManagerFormViewModel { UserId = user.Id })
								</div>
							</div>
						</div>
					}
					else if (user.IsManager == true)
					{
						<form method="post" asp-action="RemoveManager" asp-controller="AdminManage" asp-area="Admin" class="role-form">
							@Html.AntiForgeryToken()
							<input type="hidden" name="userId" value="@user.Id" />
							<button type="submit" class="delete-button">❌Remove Manager</button>
						</form>
					}
				</td>
				<td>
					<form method="post" asp-action="Delete" asp-controller="AdminManage" asp-area="Admin" class="delete-form">
						@Html.AntiForgeryToken()
						<input type="hidden" name="userId" value="@user.Id" />
						<button type="submit" class="delete-button">🗑 Delete User</button>
					</form>
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts {
	<script src="js/site.js"></script>
}

